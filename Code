#include <iostream>
#include <stdio.h>
#include<math.h>

using namespace std;

typedef unsigned long int WORD;
#define w   32
#define r   12
#define b   16
#define c   4
#define t   26
WORD S[t];
WORD P = 0xb7e15163, Q = 0x9e3779b9;

#define  ROTL(x,y)  (((x)<<(y&(w-1))) |  ((x)>>(w-(y&(w-1)))))
#define  ROTR(x,y)  (((x)>>(y&(w-1))) |  ((x)<<(w-(y&(w-1)))))


void RC5_ENCRYPT(WORD *pt, WORD *ct)
{
    WORD i, A = pt[0]+S[0], B = pt[1]+S[1];
    for (i = 1; i<=r; i++)
    {
        A = ROTL(A^B,B)+S[2*i];
        B = ROTL(B^A,A)+ S[2*i+1];
    }
    ct[0] = A;
    ct[1] = B;
}

void RC5_DECRYPT(WORD *ct, WORD *pt)
{
    WORD i, B = ct[1], A = ct[0];
    for (i = r; i>0; i--)
    {
        B = ROTR(B-S[2*i+ 1], A)^A;
        A = ROTR(A-S[2*i],B)^B;
    }
    pt[1] = B-S[1];
    pt[0] = A-S[0];
}

void RC5_SETUP(unsigned char *K)
{
    WORD i, j, k, u=w/8, A, B, L[c];
    for (i=b-1, L[c-1]=0; i!=-1; i--)
        L[i/u]=(L[i/u]<<8)+K[i];

    for (S[0]=P,i=1; i<t; i++)
        S[i]=S[i-1]+Q;

    for (A=B=i=j=k=0; k<3*t; k++, i=(i+1)%t, j=(j+1)%c)
    {
        A=S[i]=ROTL(S[i]+(A+B),3);
        B=L[j]=ROTL(L[j]+(A+B),(A+B));
    }
}

void printword(WORD A)
{
    WORD k;
    for (k=0; k<w; k+=8)
        printf(" %02.21X", (A>>k) %0xFF);
}

int main()
{
    
	WORD i, j, k, pt1[2], pt2[2], ct[2] = { 0, 0 };
    unsigned char key[b];
    if (sizeof(WORD)!=4)

    cout<<"RC5 error: WORD has %d bytess. \n", sizeof(WORD);

    cout<<"RC5-32/12/16 examples: \n";

    for (i=1; i<6; i++)
    {
        pt1[0]=ct[0];
        pt1[1]=ct[1];

        for (j=0; j<b; j++)
            key[j]=ct[0]%(255-j);

        RC5_SETUP(key);
        RC5_ENCRYPT(pt1, ct);
        RC5_DECRYPT(ct, pt2);

        cout<<"\n key= "<< i;

        for (j = 0; j<b; j++)
    
        cout<<"%02.2X"<< key[j];
        cout<<"\n plaintext ";
        
        printword(pt1[0]);
        printword(pt1[1]);
        
        cout<<"---> ciphertext ";
        
        printword(ct[0]);
        printword(ct[1]);
        
        cout<<"\n";

        if (pt1[0]!=pt2[0] || pt1[1]!=pt2[1])

            cout<<" Decryption Error !";
    }
   
    return 0;
}

